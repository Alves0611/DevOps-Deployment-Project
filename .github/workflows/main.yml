on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: "Build and Push"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_LOGIN_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build
        id: build-docker-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/rocketseat:$TAG .
          docker tag $REGISTRY/rocketseat:$TAG $REGISTRY/rocketseat:latest
          docker push --all-tags $REGISTRY/rocketseat
          IMAGE=$(echo $REGISTRY/rocketseat:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy to app runner
        id: deploy-app-runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: ${{ vars.SERVICE_NAME }}
          image: ${{ steps.build-docker-image.outputs.image }}
          access-role-arn: ${{ secrets.AWS_APP_RUNNER_ROLE }}
          region: ${{ secrets.AWS_REGION }}
          cpu: 1
          memory: 2
          port: 3000
          wait-for-service-stability-seconds: 180

      - name: App Runner check
        run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"